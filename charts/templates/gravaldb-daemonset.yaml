apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: gravaldb
  labels:
    {{- include "gravaldb.labels" . | nindent 4 }}
  {{- with .Values.gravaldb.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  selector:
    matchLabels:
      {{- include "gravaldb.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "gravaldb.labels" . | nindent 8 }}
    spec:
      {{- with .Values.gravaldb.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gravaldb.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gravaldb.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: gravaldb
          image: "{{ .Values.gravaldb.image }}"
          imagePullPolicy: {{ .Values.gravaldb.imagePullPolicy }}
          env:
            - name: POSTGRES_DB
              value: graval
            - name: POSTGRES_USER
              value: graval
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: gravaldb-secret
                  key: password
          ports:
            - name: gravaldb
              containerPort: {{ .Values.gravaldb.service.targetPort }}
              protocol: TCP
          {{- if .Values.gravaldb.persistence.enabled }}
          volumeMounts:
            - name: gravaldb-data
              mountPath: /var/lib/gravaldbql/data
          {{- end }}
          resources:
            {{- toYaml .Values.gravaldb.resources | nindent 12 }}
      {{- if .Values.gravaldb.persistence.enabled }}
      volumes:
        - name: gravaldb-data
          hostPath:
            path: /var/snap/gravaldb-data
            type: DirectoryOrCreate
      {{- end }}
