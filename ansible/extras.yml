- name: Enable k8s extras
  hosts: all
  become: yes
  tasks:
    - name: Enable community plugins and third-party helm charts
      shell: |
        microk8s enable community || (sleep 10 && microk8s enable community) || true
        microk8s helm repo add kubernetes-dashboard https://kubernetes.github.io/dashboard/ || true
        microk8s helm repo add nvidia https://helm.ngc.nvidia.com/nvidia || true
        microk8s helm repo add prometheus-community https://prometheus-community.github.io/helm-charts || true
        microk8s helm repo add metrics-server https://kubernetes-sigs.github.io/metrics-server/ || true
        microk8s helm repo update
      ignore_errors: yes
      when: is_primary | bool

    - name: Install GPU Operator
      shell: |
        microk8s helm upgrade --install gpu-operator nvidia/gpu-operator \
          --namespace gpu-operator \
          --create-namespace \
          --set nodeSelector.kubernetes.io/gpu="true" \
          --set driver.enabled=true \
          --set toolkit.enabled=true \
          --set devicePlugin.enabled=true \
          --set operator.runtimeClass="nvidia-container-runtime" \
          --set operator.defaultRuntime=containerd \
          --set containerRuntime.socketPath=/var/snap/microk8s/common/run/containerd.sock
      when: is_primary | bool

    - name: Install Prometheus
      shell: |
        microk8s helm upgrade --install prometheus prometheus-community/prometheus \
          --namespace chutes \
          --create-namespace \
          --set server.persistentVolume.enabled=false \
          --set alertmanager.persistentVolume.enabled=false \
          --set prometheus-pushgateway.persistentVolume.enabled=false \
          --set prometheus-server.persistentVolume.enabled=false \
          --set alertmanager.persistence.enabled=false \
          --set server.nodeSelector."kubernetes\.io/hostname"={{ inventory_hostname }} \
          --set alertmanager.nodeSelector."kubernetes\.io/hostname"={{ inventory_hostname }} \
          --set pushgateway.nodeSelector."kubernetes\.io/hostname"={{ inventory_hostname }} \
          --set kubeStateMetrics.nodeSelector."kubernetes\.io/hostname"={{ inventory_hostname }}
      when: is_primary | bool

    - name: Install metrics server
      shell: |
        microk8s helm upgrade --install metrics-server metrics-server/metrics-server \
          --namespace kube-system \
          --set nodeSelector."kubernetes\.io/hostname"={{ inventory_hostname }} \
          --set persistence.enabled=false
      when: is_primary | bool

    - name: Install kubernetes dashboard
      shell: |
        microk8s helm upgrade --install kubernetes-dashboard kubernetes-dashboard/kubernetes-dashboard \
          --create-namespace \
          --namespace kubernetes-dashboard \
          --set app.scheduling.nodeSelector."kubernetes\.io/hostname"={{ inventory_hostname }} \
          --set auth.nodeSelector."kubernetes\.io/hostname"={{ inventory_hostname }} \
          --set api.nodeSelector."kubernetes\.io/hostname"={{ inventory_hostname }} \
          --set web.nodeSelector."kubernetes\.io/hostname"={{ inventory_hostname }} \
          --set metricsScraper.nodeSelector."kubernetes\.io/hostname"={{ inventory_hostname }} \
          --set kong.nodeSelector."kubernetes\.io/hostname"={{ inventory_hostname }} \
          --set persistence.enabled=false
      when: is_primary | bool
